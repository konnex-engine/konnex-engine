<?php

/**
 * Konnex Addresses API
 * An API that allows for creating, reading, updating and deleting of Konnex Object Address data.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: info@konnex-engine.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Source files are located at:
 *
 * > swagger-codegen/modules/swagger-codegen/src/main/resources/php-laravel/
 */


namespace KonnexEngine\Http\Controllers;

use Illuminate\Support\Facades\Request;

class AddressesController extends Controller
{
    /**
     * Constructor
     */
    public function __construct()
    {
    }

    /**
     * Operation createAddress
     *
     * Creates a new Address.
     *
     * @param string $objectType The type of object to get contact details for. (required)
     * @param int $objectID The leadID of the Lead to get addresses for (required)
     *
     * @return Http response
     */
    public function createAddress($objectType, $objectID)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing createAddress as a post method ?');
    }
    /**
     * Operation getAddresses
     *
     * Retrieves all available Konnex User address data.
     *
     * @param string $objectType The type of object to get contact details for. (required)
     * @param int $objectID The leadID of the Lead to get addresses for (required)
     *
     * @return Http response
     */
    public function getAddresses($objectType, $objectID)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getAddresses as a get method ?');
    }
    /**
     * Operation deleteAddress
     *
     * Delete address data..
     *
     * @param string $objectType The type of object to get contact details for. (required)
     * @param int $objectID The leadID of the Lead to get addresses for (required)
     * @param int $addressID The address ID for the specific address to delete. (required)
     *
     * @return Http response
     */
    public function deleteAddress($objectType, $objectID, $addressID)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing deleteAddress as a delete method ?');
    }
    /**
     * Operation getAddressByID
     *
     * Returns a specific Address by ID.
     *
     * @param string $objectType The type of object to get contact details for. (required)
     * @param int $objectID The leadID of the Lead to get addresses for (required)
     * @param int $addressID The Address ID for the specific Address. (required)
     *
     * @return Http response
     */
    public function getAddressByID($objectType, $objectID, $addressID)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getAddressByID as a get method ?');
    }
    /**
     * Operation updateAddress
     *
     * Update address data..
     *
     * @param string $objectType The type of object to get contact details for. (required)
     * @param int $objectID The leadID of the Lead to get addresses for (required)
     * @param int $addressID The Address ID for the specific Address. (required)
     *
     * @return Http response
     */
    public function updateAddress($objectType, $objectID, $addressID)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing updateAddress as a put method ?');
    }
}
